import RPi.GPIO as GPIO
import time

# Set GPIO call mode as BCM
GPIO.setmode(GPIO.BCM)

# Define Ports
ENA = 13
ENB = 20
IN1 = 19
IN2 = 16
IN3 = 21
IN4 = 26
servo1 = 12
servo2 = 6
servo3 = 5
servo4 = 7

# Initialize
GPIO.setup(servo1, GPIO.OUT)
GPIO.setup(servo2, GPIO.OUT)
GPIO.setup(servo3, GPIO.OUT)
GPIO.setup(servo4, GPIO.OUT)
s1 = GPIO.PWM(servo1,50)
s2 = GPIO.PWM(servo2,50)
s3 = GPIO.PWM(servo3,50)
s4 = GPIO.PWM(servo4,50)
GPIO.setup(ENA, GPIO.OUT, initial=GPIO.LOW) #motor 1 is using ENA
GPIO.setup(ENB, GPIO.OUT, initial=GPIO.LOW) #motor 2 is using ENB
GPIO.setup(IN1, GPIO.OUT, initial=GPIO.LOW) #motor 1 positive supply
GPIO.setup(IN2, GPIO.OUT, initial=GPIO.LOW) #motor 1 negative supply
GPIO.setup(IN3, GPIO.OUT, initial=GPIO.LOW) #motor 2 positive supply
GPIO.setup(IN4, GPIO.OUT, initial=GPIO.LOW) #motor 2 negative supply


PWMA=GPIO.PWM(ENA,1000)
PWMB=GPIO.PWM(ENB,1000)
# Define all the required function for stop, forward, back ,right ,left
def Stop():
    GPIO.output(IN1, False)
    GPIO.output(IN2, False)
    GPIO.output(IN3, False)
    GPIO.output(IN4, False)
    GPIO.output(ENA, False)
    GPIO.output(ENB, False)

def Move_Forward():
    GPIO.output(ENA, True)
    GPIO.output(ENB, True)
    GPIO.output(IN1, True)
    GPIO.output(IN2, False)
    GPIO.output(IN3, True)
    GPIO.output(IN4, False)
def Move_Back():
    GPIO.output(ENA, True)
    GPIO.output(ENB, True)
    GPIO.output(IN1, False)
    GPIO.output(IN2, True)
    GPIO.output(IN3, False)
    GPIO.output(IN4, True)
def Move_Left():
    GPIO.output(ENA, True)
    GPIO.output(ENB, True)
    GPIO.output(IN1, True)
    GPIO.output(IN2, False)
    GPIO.output(IN3, False)
    GPIO.output(IN4, True)
def Move_Right():
    GPIO.output(ENA, True)
    GPIO.output(ENB, True)
    GPIO.output(IN1, False)
    GPIO.output(IN2, True)
    GPIO.output(IN3, True)
    GPIO.output(IN4, False)
def Robot_Arm():
    servonumber = int(input('Select the servo number you want to move (1, 2, 3 or 4 or 5 for exiting): '))
    if servonumber == 1:
        position = int(input('Select position between 1 and 12: '))
        s1.ChangeDutyCycle(position)
    elif servonumber == 2:
        position = int(input('Select position between 1 and 12: '))
        s2.ChangeDutyCycle(position)
    elif servonumber == 3:
        position = int(input('Select position between 1 and 12: '))
        s3.ChangeDutyCycle(position)
    elif servonumber == 4:
        position = int(input('Select position between 1 and 12: '))
        s4.ChangeDutyCycle(position)
    elif servonumber == 5:
        raise SystemExit
        GPIO.cleanup()

s1.start(0)
s2.start(0)
s3.start(0)
s4.start(0)


# Main loop
if __name__ == "__main__":
    try:
        choice = int(input('You want to control just robot arm or the entire robot? (1 for robot and 2 will exit): '))
        if choice == 1:
            while True:  # Continuous loop
                #Asks user for input of direction
                User_Input = input("Input a, b, c, d: \n")
                t1 = int(input('Input how long the robot should run for between 1-3: '))
                Speed=50
                print('base speed is 50')
                Speed1 = int(input("change of speed: \n")) #Asks user for input on how much they want to change the speed
                #Starts the PWM wave for both the motors
                PWMA.start(0)
                PWMB.start(0)
                Speed += Speed1
                PWMA.ChangeDutyCycle(Speed)
                PWMB.ChangeDutyCycle(Speed)
                if (User_Input == 'a'):  # If key 'a' is pressed
                    Move_Forward()
                    time.sleep(t1)
                    Stop()
                    while True:
                        Robot_Arm()
                elif (User_Input == 'b'):  # If key 'b' is pressed
                    Move_Back()
                    time.sleep(t1)
                    Stop()
                    while True:
                        Robot_Arm()
                elif (User_Input == 'c'):  # If key 'c' is pressed
                    Move_Left()
                    time.sleep(t1)
                    Move_Forward()
                    time.sleep(t1)
                    Stop()
                    while True:
                        Robot_Arm()
                elif (User_Input == 'd'):  # If key 'd' is pressed
                    Move_Right()
                    time.sleep(t1)
                    Move_Back()
                    time.sleep(t1)
                    Stop()
                    while True:
                        Robot_Arm()
                else:
                    Stop()
                    time.sleep(t1)  # Short delay to prevent high CPU usage
                    GPIO.cleanup()
           
        elif choice == 2:
            while True:
                servonumber = int(input('Select the servo number you want to move (1, 2, 3 or 4 or 5 for exiting): '))
                if servonumber == 1:
                    position = int(input('Select position between 1 and 12: '))
                    s1.ChangeDutyCycle(position)
                elif servonumber == 2:
                    position = int(input('Select position between 1 and 12: '))
                    s2.ChangeDutyCycle(position)
                elif servonumber == 3:
                    position = int(input('Select position between 1 and 12: '))
                    s3.ChangeDutyCycle(position)
                elif servonumber == 4:
                    position = int(input('Select position between 1 and 12: '))
                    s4.ChangeDutyCycle(position)
                elif servonumber == 5:
                    s1.ChangeDutyCycle(2)
                    s2.ChangeDutyCycle(4)
                    s3.ChangeDutyCycle(3)
                    s4.ChangeDutyCycle(7)
                    GPIO.cleanup()
                    raise SystemExit

    except:
        # Cleanup GPIO settings before exiting
        GPIO.cleanup()
